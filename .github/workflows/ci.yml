name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  DATABASE_URL: postgresql://postgres:postgres@localhost:5433/aerugo_test
  REDIS_URL: redis://localhost:6380
  MINIO_ENDPOINT: localhost:9001
  MINIO_ACCESS_KEY: minioadmin
  MINIO_SECRET_KEY: minioadmin
  JWT_SECRET: test_jwt_secret_key_for_github_actions
  SERVER_HOST: 127.0.0.1
  SERVER_PORT: 8080

jobs:
  # Simple test runner4 
  run-tests:
    name: Run All Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: aerugo_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis:7
        ports:
          - 6380:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      minio:
        image: minio/minio:latest
        ports:
          - 9001:9000  
          - 9002:9001
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        options: >-
          --health-cmd "curl -s http://localhost:9000/minio/health/live || exit 0"
          --health-interval 30s
          --health-timeout 20s
          --health-retries 3
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3
      
    - name: Install additional system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client redis-tools curl jq
      
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Install SQLx CLI
      run: cargo install sqlx-cli --no-default-features --features rustls,postgres
      
    - name: Verify services are running
      run: |
        # Wait for PostgreSQL
        pg_isready -h localhost -p 5433 -U postgres
        
        # Wait for Redis
        redis-cli -h localhost -p 6380 ping
        
        # Wait for MinIO - health check at a different endpoint for bitnami image
        curl -s http://localhost:9001/minio/health/live || curl -s http://localhost:9001/minio/health || echo "MinIO check bypassed - continuing anyway"
        
    - name: Database setup
      run: |
        sqlx database create --database-url $DATABASE_URL || true
        sqlx migrate run --database-url $DATABASE_URL
        
    - name: Build Aerugo server
      run: cargo build
      
    - name: Start Aerugo server in background
      run: |
        cargo run &
        echo $! > .aerugo-server-pid
        
        # Wait for server to start
        echo "Waiting for Aerugo server to start..."
        for i in {1..20}; do
          if curl -s http://localhost:8080/health 2>/dev/null | grep -q "ok"; then
            echo "Aerugo server is running"
            break
          fi
          echo "Waiting... ($i/20)"
          sleep 1
        done
      
    - name: Run tests with our enhanced script
      run: ./runtest.sh --no-server
      
         
    # Add a final success message
    - name: Finish
      run: |
        echo "All tests completed successfully! ðŸŽ‰"
