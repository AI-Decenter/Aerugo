#!/bin/bash
# DETAILED GUIDE TO RUN FULL ARCHITECTURE

echo "🚀 **GUIDE TO RUN FULL AERUGO ARCHITECTURE**"
echo ""

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

step=1
function print_step() {
    echo -e "${BLUE}📋 STEP $step: $1${NC}"
    ((step++))
}

print_step "STOP CURRENT SERVICES"
echo "Stop Aerugo processes and containers:"
echo "pkill -f aerugo"
echo "docker stop \$(docker ps -q) 2>/dev/null || true"
echo ""

print_step "CLEAN OLD DATA (optional)"
echo "Remove old containers and volumes to start fresh:"
echo "docker rm -f \$(docker ps -aq) 2>/dev/null || true"
echo "docker volume prune -f"
echo ""

print_step "CHẠY SETUP INFRASTRUCTURE"
echo "Khởi động PostgreSQL, Redis, MinIO và Load Balancer:"
echo "./setup-manual-architecture.sh"
echo ""
echo "Script này sẽ:"
echo "  ✅ Start PostgreSQL (port 5434)"
echo "  ✅ Start Redis (port 6381)" 
echo "  ✅ Start MinIO (port 9003/9004)"
echo "  ✅ Create S3 bucket 'aerugo-registry'"
echo "  ✅ Build Aerugo release binary"
echo "  ✅ Create environment configs"
echo "  ✅ Start Nginx Load Balancer (port 8080)"
echo ""

print_step "KHỞI ĐỘNG AERUGO NODES"
echo "Mở 3 terminals và chạy từng node:"
echo ""
echo -e "${YELLOW}Terminal 1 (Node 1):${NC}"
echo "env \$(cat /tmp/aerugo-node-1.env | xargs) ./target/release/aerugo"
echo ""
echo -e "${YELLOW}Terminal 2 (Node 2):${NC}"  
echo "env \$(cat /tmp/aerugo-node-2.env | xargs) ./target/release/aerugo"
echo ""
echo -e "${YELLOW}Terminal 3 (Node 3):${NC}"
echo "env \$(cat /tmp/aerugo-node-3.env | xargs) ./target/release/aerugo"
echo ""

print_step "KIỂM TRA HEALTH"
echo "Chạy script kiểm tra tất cả services:"
echo "./architecture-status.sh"
echo ""

print_step "TEST REGISTRY API"
echo "Test từng node individual:"
echo "curl http://localhost:8081/v2/  # Node 1"
echo "curl http://localhost:8082/v2/  # Node 2"  
echo "curl http://localhost:8083/v2/  # Node 3"
echo ""

print_step "TEST DOCKER PUSH/PULL"
echo "Tạo test image và push:"
echo "echo 'Hello Aerugo!' > test.txt"
echo "cat > Dockerfile.test << 'EOF'"
echo "FROM alpine:latest"
echo "COPY test.txt /test.txt"
echo "CMD cat /test.txt"
echo "EOF"
echo ""
echo "docker build -t localhost:8081/test/demo:latest -f Dockerfile.test ."
echo "docker push localhost:8081/test/demo:latest"
echo ""
echo "Test pull:"
echo "docker rmi localhost:8081/test/demo:latest"
echo "docker pull localhost:8081/test/demo:latest"
echo "docker run --rm localhost:8081/test/demo:latest"
echo ""

print_step "MONITOR LOGS"
echo "View logs for each service:"
echo "docker logs postgres    # PostgreSQL logs"
echo "docker logs redis       # Redis logs"
echo "docker logs minio       # MinIO logs"
echo "docker logs nginx-lb    # Load Balancer logs"
echo ""
echo "Aerugo nodes logs will display in running terminals"
echo ""

print_step "ACCESS WEB INTERFACES"
echo "Open browser to access:"
echo "📊 MinIO Console: http://localhost:9004 (minioadmin/minioadmin)"
echo "📋 Load Balancer: http://localhost:8080 (may have 502 error)"
echo "🏗️ Aerugo Nodes: http://localhost:808[1-3]/v2/"
echo ""

echo -e "${GREEN}🎯 **ARCHITECTURE AFTER RUNNING:**${NC}"
echo ""
echo "        ┌─────────────────────────────────┐"
echo "        │   Docker Client                 │"
echo "        └────────────────┬────────────────┘"
echo "                         │"
echo "           ┌─────────────┴─────────────┐"
echo "           │ Load Balancer :8080       │"
echo "           ▼                             ▼"
echo "    ┌──────────────┐ ┌──────────────┐ ┌──────────────┐"
echo "    │ Node 1 :8081 │ │ Node 2 :8082 │ │ Node 3 :8083 │"
echo "    └──────┬───────┘ └──────┬───────┘ └──────┬───────┘"
echo "           │              │              │"
echo "           ▼              ▼              ▼"
echo "┌─────────────────────┐     ┌─────────────────────┐"
echo "│ PostgreSQL :5434    │◀────│ Redis :6381         │"
echo "└─────────────────────┘     └─────────────────────┘"
echo "           ▲"
echo "           │"
echo "           ▼"
echo "┌─────────────────────────┐"
echo "│ MinIO :9003/9004        │"
echo "└─────────────────────────┘"
echo ""

echo -e "${YELLOW}⚠️  **NOTE:**${NC}"
echo "- Nodes run in foreground, need 3 terminals"
echo "- Load balancer may have networking issue (502 error)"
echo "- Test directly via individual nodes (port 8081-8083)"
echo "- Data stored in PostgreSQL and MinIO persistent"
echo ""

echo -e "${GREEN}✅ **SUCCESS WHEN:**${NC}"
echo "- All services health check pass"
echo "- Curl /v2/ returns response from nodes"
echo "- Docker push/pull works"
echo "- MinIO console accessible"
echo ""
